install.packages('knitr', dependencies = TRUE)
setwd("C:\\Users\\anupama25\\GitHub\\Kaggle_Titanic_Dataset")
dim(train)
setwd("C:\\Users\\anupama25\\GitHub\\Kaggle_Titanic_Dataset")
train=read.csv("train.csv")
test = read.csv("test.csv")
summary(train)
train.is.na()
is.na(train)
summary(is.na(train))
summary(is.na(train)==TRUE)
temp=summary(is.na(train))
temp
table(temp)
as.table(temp)
typeof(temp)
typeof(as.table(temp))
typeof(train)
train = as.data.frame(train)
typeof(train)
typeof(train)
View(train)
miss_values = apply(train, 2, function(x) sum(is.na(x))/length(x))*100)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
train=read.csv("train.csv")
train[1:10]
train$Cabin[1:5]
is.na(train$Cabin)
sum(is.na(train$Cabin))
colnames(train)
summary(train$Cabin)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
summary(teain)
summary(train)
apply(train, typeof)
apply(train, function(x) typeof(x))
apply(train, 1, function(x) typeof(x))
apply(train, 2, function(x) typeof(x))
str(train)
str(train)
#removing PassengerId, Name, ticket and Cabin
train_model = train[,-c("PassengerId","Name", "Ticket", "Cabin"]
#removing PassengerId, Name, ticket and Cabin
train_model = train[,-c("PassengerId","Name", "Ticket", "Cabin")]
#removing PassengerId, Name, ticket and Cabin
del = c("PassengerId","Name", "Ticket", "Cabin")
train_model = train[,-del]
train_model = train[,-col("PassengerId")]
col(train_model)
colnames(train_model)
train_model = train
col(train_model)
colnames(train_model)
within(train_model, rm(del)))
within(train_model, rm(del))
#removing PassengerId, Name, ticket and Cabin
del = c("PassengerId","Name", "Ticket", "Cabin")
within(train_model, rm(del))
train_model[1,1]
train_model[,1]
colnaes(train_model[,1])
colnames(train_model[,1])
train_model$PassengerId
colnames(train_model)
#removing PassengerId, Name, ticket and Cabin
del = c(1,4,9,11)
train_model = train[,-del]
colnames(train_model)
test_model = test[,-del]
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
str(train_model)
x=0
# adding dummy
male = apply(train_model$Sex, 1, function(x) if (x=="male") {x=1
} else {
x=0
}   )
# adding dummy
male = apply(train_model$Sex, 1, function(x) as.numeric(x=="male") )
# adding dummy
male = as.numeric(x=="male")
male
# adding dummy
male = as.numeric(train_model$Sex=="male")
male
sum(male)
summary(train_model$Sex)
colnames(train_model)
#removing Sex and adding dummy "male'
train_model=cbind(train_model[,-3], male)
colnames(train_model)
family = as.numeric(train_model$SibSp+train_model$Parch >0)
family
family = as.numeric(train_model$SibSp+train_model$Parch >0)
colnames(train_model)
train_model=cbind(train_model[,-del1], family)
del1 = c(4,5)
train_model=cbind(train_model[,-del1], family)
colnames(train_model)
str(train_model)
C = as.numeric(train_model$Embarked=="C")
Q = as.numeric(train_model$Embarked=="S")
train_model=cbind(train_model[,-5], C, Q)
str(train_model)
head(train_model)
male_test = as.numeric(test_model$Sex=="male")
male_test = as.numeric(test_model$Sex=="male")
test_model=cbind(test_model[,-3], male_test)
size(male_test)
summary(male_test)
male_test
test = read.csv("test.csv")
summary(train)
is.na(train)
temp=summary(is.na(train))
as.table(temp)
typeof(as.table(temp))
typeof(train)
View(train)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
del = c(1,4,9,11)
train_model = train[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
setwd("C:\\Users\\anupama25\\GitHub\\Kaggle_Titanic_Dataset")
train=read.csv("train.csv")
test = read.csv("test.csv")
summary(train)
is.na(train)
temp=summary(is.na(train))
as.table(temp)
typeof(as.table(temp))
typeof(train)
#View(train)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
str(train)
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
Y_train = train_model$Survived
train_model= train_model[,-Y_train]
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(train_model)
colnames(test_model)
Y_train
train_model = train
test_model = test
del)
colnames(test_mod
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
train_model= train_model[,-2] # same predictors for test and train
colnames(train_model)
colnames(test_model)
del = c(1,3,8,10)
train_model = train[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
Y_train = train_model$Survived
train_model= train_model[,-2] # same predictors for test and train
colnames(train_model)
colnames(test_model)
del = c(1,3,8,10)
train_model = train_model[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
str(train_model)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
miss_value_test = apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_value_test
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
sum(is.na(test_model$Age))
miss_value_test = apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_value_test
test_model$Fare[which(is.na(test_model$Fare))] <- mean(test_model$Fare, na.rm = TRUE)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
colnames(train_model)
colnames(test_model)
# adding dummy
male= as.numeric(train_model$Sex=="male")
train_model=cbind(train_model[,-3], male)
male_test = as.numeric(test_model$Sex=="male")
test_model=cbind(test_model[,-3], male_test)
family = as.numeric(train_model$SibSp+train_model$Parch >0)
del1 = c(4,5)
train_model=cbind(train_model[,-del1], family)
family_test = as.numeric(test_model$SibSp+test_model$Parch >0)
family_test = as.numeric(test_model$SibSp+test_model$Parch >0)
del1 = c(4,5)
test_model=cbind(test_model[,-del1], family_test)
C = as.numeric(train_model$Embarked=="C")
Q = as.numeric(train_model$Embarked=="S")
train_model=cbind(train_model[,-5], C, Q)
C= as.numeric(test_model$Embarked=="C")
Q = as.numeric(test_model$Embarked=="S")
test_model=cbind(test_model[,-5], C, Q)
str(train_model)
str(test_model)
train=read.csv("train.csv")
test = read.csv("test.csv")
summary(train)
is.na(train)
temp=summary(is.na(train))
as.table(temp)
typeof(as.table(temp))
typeof(train)
#View(train)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
str(train)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
Y_train = train_model$Survived
train_model= train_model[,-2] # same predictors for test and train
colnames(train_model)
colnames(test_model)
del = c(1,3,8,10)
train_model = train_model[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
test_model$Fare[which(is.na(test_model$Fare))] <- mean(test_model$Fare, na.rm = TRUE)
male= as.numeric(train_model$Sex=="male")
#sum(male)
#summary(train_model$Sex)
#colnames(train_model)
#removing Sex and adding dummy "male'
train_model=cbind(train_model[,-3], male)
male_test = as.numeric(test_model$Sex=="male")
test_model=cbind(test_model[,-3], male_test)
str(train_model)
train=read.csv("train.csv")
test = read.csv("test.csv")
summary(train)
is.na(train)
temp=summary(is.na(train))
as.table(temp)
typeof(as.table(temp))
typeof(train)
#View(train)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
str(train)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
Y_train = train_model$Survived
train_model= train_model[,-2] # same predictors for test and train
colnames(train_model)
colnames(test_model)
del = c(1,3,8,10)
train_model = train_model[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
test_model$Fare[which(is.na(test_model$Fare))] <- mean(test_model$Fare, na.rm = TRUE)
#------------------------------------------------------------fare can be replace by the relative class fare
colnames(train_model)
# adding dummy
male= as.numeric(train_model$Sex=="male")
train_model=cbind(train_model[,-2], male)
male_test = as.numeric(test_model$Sex=="male")
test_model=cbind(test_model[,-2], male_test)
family = as.numeric(train_model$SibSp+train_model$Parch >0)
del1 = c(4,5)
train_model=cbind(train_model[,-del1], family)
family_test = as.numeric(test_model$SibSp+test_model$Parch >0)
del1 = c(4,5)
test_model=cbind(test_model[,-del1], family_test)
C = as.numeric(train_model$Embarked=="C")
Q = as.numeric(train_model$Embarked=="S")
train_model=cbind(train_model[,-5], C, Q)
C= as.numeric(test_model$Embarked=="C")
Q = as.numeric(test_model$Embarked=="S")
test_model=cbind(test_model[,-5], C, Q)
str(train_model)
str(test_model)
setwd("C:\\Users\\anupama25\\GitHub\\Kaggle_Titanic_Dataset")
train=read.csv("train.csv")
test = read.csv("test.csv")
summary(train)
is.na(train)
temp=summary(is.na(train))
as.table(temp)
typeof(as.table(temp))
typeof(train)
#View(train)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
#age values are missing, replacing them with average age value
train$Age[which(is.na(train$Age))] <- mean(train$Age, na.rm = TRUE)
miss_values = apply(train, 2, function(x) (sum(is.na(x))/length(x))*100)
miss_values
str(train)
train_model = train
test_model = test
#removing PassengerId, Name, ticket and Cabin
colnames(train_model)
colnames(test_model)
Y_train = train_model$Survived
train_model= train_model[,-2] # same predictors for test and train
colnames(train_model)
colnames(test_model)
del = c(1,3,8,10)
train_model = train_model[,-del]
colnames(train_model)
test_model = test[,-del]
colnames(test_model)
apply(test_model, 2, function(x) (sum(is.na(x))/length(x))*100)
#replacing missing values for test data
test_model$Age[which(is.na(test_model$Age))] <- mean(test_model$Age, na.rm = TRUE)
test_model$Fare[which(is.na(test_model$Fare))] <- mean(test_model$Fare, na.rm = TRUE)
#------------------------------------------------------------fare can be replace by the relative class fare
# adding dummy
male= as.numeric(train_model$Sex=="male")
#sum(male)
#summary(train_model$Sex)
#colnames(train_model)
#removing Sex and adding dummy "male'
train_model=cbind(train_model[,-2], male)
male_test = as.numeric(test_model$Sex=="male")
test_model=cbind(test_model[,-2], male_test)
#instead of having 2 columns as Parch and Sibsp we can combine to know if they are with family
family = as.numeric(train_model$SibSp+train_model$Parch >0)
del1 = c(4,5)
train_model=cbind(train_model[,-del1], family)
family_test = as.numeric(test_model$SibSp+test_model$Parch >0)
del1 = c(4,5)
test_model=cbind(test_model[,-del1], family_test)
#creating dummies for embarked
colnames(train_model)
C = as.numeric(train_model$Embarked=="C")
Q = as.numeric(train_model$Embarked=="S")
train_model=cbind(train_model[,-4], C, Q)
C= as.numeric(test_model$Embarked=="C")
Q = as.numeric(test_model$Embarked=="S")
test_model=cbind(test_model[,-4], C, Q)
str(train_model)
str(test_model)
# adding Survived Column back to train_model
train_model=cbind(train_model, Y_train)
colnames(train_model)
part = .7* length(train_model)
length(train_model)
part = .7* nrow(train_model)
part = round(.7* nrow(train_model),0)
part = round(.7* nrow(train_model),0)
train_model_train = train_model[:part,]
train_model_train = train_model[1:part,]
train_model_test =  train_model[part+1:nrow(train_model),]
part+1
train_model_test =  train_model[(part+1):nrow(train_model),]
logmodel <- glm(Y_train ~., family = binomial(link = "logit"), data = train_model_train)
summary(logmodel)
resultPredict <- predict(logmodel, newdata = train_model_test)
resultPredict
resultPredict <- ifelse(resultPredict>0.5,1,0)
resultPredict
error = mean(resultPredict!=train_model_test$Y_train)
print(paste('Accuracy',1-error))
